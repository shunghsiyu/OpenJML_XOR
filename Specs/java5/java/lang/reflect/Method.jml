package java.lang.reflect;

public final
class Method extends AccessibleObject implements Member, GenericDeclaration {

    //@ public model Class returntype;

//    //@ ensures this.returntype == returnType;
//    //@ pure
//    Method(Class declaringClass,
//           String name,
//           Class[] parameterTypes,
//           Class returnType,
//           Class[] checkedExceptions,
//           int modifiers,
//           int slot);
//
//    Method copy();

    /*@ also public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ Class<?> getDeclaringClass();

    /*@ also public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ String getName();

    public /*@ pure @*/ int getModifiers();

    /*@ public normal_behavior
      @   ensures \result == returntype;
      @*/
    public /*@ pure non_null @*/ Class<?> getReturnType();

    /*@ public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ Class<?>[] getParameterTypes();

    /*@ public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/  Class<?>[] getExceptionTypes();

    public /*@ pure @*/ boolean equals(/*@\readonly*//*@nullable*/Object obj);

    public /*@ pure @*/ int hashCode();

    public /*@ pure @*/ String toString();

    //+@ requires !Modifier.isStatic(getModifiers()) ==> obj != null;
    /*@ ensures getReturnType() == boolean.class ==> \result instanceof Boolean;
      @ ensures getReturnType() == byte.class    ==> \result instanceof Byte;
      @ ensures getReturnType() == char.class    ==> \result instanceof Character;
      @ ensures getReturnType() == int.class     ==> \result instanceof Integer;
      @ ensures getReturnType() == long.class    ==> \result instanceof Long;
      @ ensures getReturnType() == short.class   ==> \result instanceof Short;
      @ ensures getReturnType() == double.class  ==> \result instanceof Double;
      @ ensures getReturnType() == float.class   ==> \result instanceof Float;
      @ ensures getReturnType() == void.class    ==> \result == null;
      @ ensures_redundantly 
      @     getReturnType().isPrimitive() && getReturnType() != void.class 
      @         ==> \result != null;
      @*/
    public /*@ nullable */ Object invoke(/*@nullable*/Object obj, Object[] args)
    throws IllegalAccessException, IllegalArgumentException,
               InvocationTargetException;

    // MethodAccessor is not a public class, it's a sun proprietary class
    // MethodAccessor getMethodAccessor();

    // void setMethodAccessor(MethodAccessor accessor);

//    static Class[] copy(Class[] in);
}
