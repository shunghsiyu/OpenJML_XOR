package java.lang.reflect;

final public class Constructor<T> extends AccessibleObject 
    implements Member, GenericDeclaration {

//    @ pure
//    Constructor(Class declaringClass,
//                Class[] parameterTypes,
//                Class[] checkedExceptions,
//                int modifiers,
//                int slot);

    Constructor<T> copy();

    /*@ also public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ Class<T> getDeclaringClass();

    /*@ also public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ String getName();

    public /*@ pure @*/ int getModifiers();

    /*@ public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ Class<?>[] getParameterTypes();

    /*@ public normal_behavior
      @   ensures \result != null;
      @*/
    public /*@ pure @*/ Class<?>[] getExceptionTypes();

    public /*@ pure @*/ boolean equals(/*@nullable*/Object obj);

    public /*@ pure @*/ int hashCode();

    public /*@ pure @*/ String toString();

    public /*@ non_null @*/ T newInstance(Object... initargs)
    throws InstantiationException, IllegalAccessException,
               IllegalArgumentException, InvocationTargetException;

    // ConstructorAccessor is a sun proprietary class
    // ConstructorAccessor getConstructorAccessor();
    // void setConstructorAccessor(ConstructorAccessor accessor);

    int getSlot();

    // FIXME - there is more to be added
}